# What is Taskmate?
Taskmate ... get more things done with your editor!

“Because home is where my editor is” — ember

The Taskmate bundle is a simplistic yet powerful solution for getting things done in TextMate. Taskmate lets you take control of your projects and actions by providing a simple set of commands to work with plain text files. A minimum of setting up is required and the small command set lets you concentrate on getting your actions done, rather than spending time managing your tasks.

# Managing your files
## The Taskmate directory
Taskmate works on all files with a .todo extension contained in a directory specified as follows:

- If you have a shell variable defined for TM\_TASKMATE\_DIRECTORY then that is used
- If not, then the directory containing your project file is used
- If there is no project, or the project is not saved, then the directory of the actiuve file is used

In most cases, the default behaviour will be fine, but some slowdown is possible if your project is in a directory with lots of files (your Home or Root directory are not recommended!). The best advice is to leave this alone unless you experience a slow response to any of the Taskmate commands.

## .todo files
Taskmate works with all files with the extension .todo in your directory. These files contain all of your projects and actions. Anyone familiar with David Allen's "Getting things Done" will be right at home here, but a brief description of each is as follows:

**projects**  
Projects are collections of actions towards a common goal. The only restriction on projects is that they must be defined on one line and that line must end in a colon.

**actions**  
Actions are the things you do to move towards completing the project. "Organise birthday party" is a project as it's not a single action you can do. "email venue to find available dates" and "Phone baker to order cake" could be actions within that project. Actions are either pending (to be done) or completed (done).

The only restrictions on actions is that they must be attached to a project and they must be on a single line, starting with a hyphen. Actions can have tags to indicate the context in which they are done. This is again a GTD idea, but it's pretty straightforward to pick up.

A sample .todo file could look as follows:

Go diving with Great White Sharks in South Africa:  
- Get "Shark diving for dummies" out of the library @errand  
- Phone bank to increase travel insurance premium @phone  
- Go to travel agent to book flights @errand

Learn Ruby:  
- Find tutorial on web to install Ruby @online  
- Download all the files I need to begin @online

Single actions:  
- Pick up milk on way into work @errand  
- Phone Mum @phone  
- Change water in fish tank @home

As you can see, some actions don't really a project as they stand on their own. Taskmate requires all actions to be assigned to a project (as of this writing), so you will need to create a project to hold all these single actions.

## Tag files
Tag files are .todo files generated by Taskmate. When you run the Rebuild Files command a file is generated for each tag used in your .todo files, and all actions with that tag are added to the file. Your @phone tag file will contain all actions tagged with @phone, your @research tag file will contain all actions tagged with @research, and so on.

Note that you can work with actions in a tag file in exactly the same way as in your source .todo files. However, the rebuild only works from the source files to the tag files, not the other way - any actions changed in a tag file will **not** be updated back in the source file. Use the Jump To Source command to get back to the source file and make your changes there.

# The Taskmate commands
Commands in Taskmate are there to help you add tasks, tag tasks, and help you identify the best next action you can take. Summaries of each task follow:

## Add New Task
With your cursor in an existing action, press ⌘enter to open a new action underneath the current one.

## Add tag
With your cursor anywhere in an action, press &#8997;⇧L to pop up a list of tags already in use in your .todo files. Either press the number corresponding to the tag you want to add, or click a tag to add it to the current action. The list is generated from tags already in use in your .todo files - if it is a new tag you need then you will need to add it manually to the action.

## Toggle Completed
Pressing &#8997;&#x2305; in any action will mark the action as deleted. This will change the hyphen to a plus, add the @completed tag, and add the time and date that the action was marked as completed.

## Find Next Tag
While in a .todo file, pressing &#8997;-tab will jump to and highlight the next tag in the file. This gives you quick access to delete or amend tags without having to remember too many commands.

## Rebuild Files
Press &#x21E7;&#8997;&#x2305; in any taskmate file to rebuild all of the tag files for the project. All the existing tag files are deleted and new ones rebuilt for every tag in the project. The tag files are put in the route of your Taskmate project (see section 2.1).

## Jump From Tag
To view the tag file corresponding to a particular tag, position the cursor in the tag and press &#x2305;. This will jump you to the tag file so you can see all actions tagged with that tag.

## Jump To Source
When in a tag file, press &#x2305; with the cursor in any action to go to the source file for that action. This and the previous command work together to provide a quick way to navigate around your projects and actions.

# Questions and answers
## How do I change a tag for an action?
There is no function to change the tag for an action, but the process is quick: &#8997;-tab to highlight the current tag, hit delete, then &#8997;-shift-L to add a new tag.

## Some commands seem to hang Textmate
This could be because the directory Taskmate is using has a lot of files and folders in. See section 2.1.

## Where are my tag files?
Again, this depends on the directory Taskmate is using (section 2.1). The tag files will always be in the root of the directory Taskmate is using. If the project is saved in your Documents folder then that's where the tag files will be, regardless of where the source file you triggered the rebuild from.

## I marked an action as completed and it's now showing as pending - what happened?
You may have marked the action as completed in the tag file rather than the source file. Changes in the tag files are not taken back over to the source file, and when the files are rebuilt the tag files are overwritten. This will replace the completed action in the tag file with the pending version in the source file.